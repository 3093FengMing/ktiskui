buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: "maven"
apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.10.2-1.6.0-SNAPSHOT"
group = "com.saomc" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "saoui"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.10.2-12.18.1.2011"
    runDir = "run"
    mappings = "snapshot_20160725"
}

dependencies {

}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

idea { module { inheritOutputDirs = true } }

uploadArchives {
//    if (System.hasProperty('REPO_PWD')) {
        repositories.mavenDeployer {
            repository(url: "http://maven.bluexin.be/repository/snapshots/") {
                authentication(userName: "CI", password: System.getenv('REPO_PWD'))
            }
//            repository(url: 'file://G:\\saoui\\build\\mvn')
        }
//    } else println("No password set up!")
    
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

task sourceJar(type: Jar, dependsOn: "sourceMainJava", overwrite: true) {
    from "build/sources/java"
    classifier = 'sources'
}

artifacts {
    archives sourceJar
    archives deobfJar
}
