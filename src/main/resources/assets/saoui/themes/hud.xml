<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<hud xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <parts>
        <entry>
            <key>HEALTH_BOX</key>
            <value>
                <x>2.0</x>
                <y>2.0</y>
                <z>0.0</z>
                <calls>
                    <element xsi:type="glRectangle">
                        <h>15.0</h>
                        <rgba>0xFFFFFFFF</rgba>
                        <srcH>15.0</srcH>
                        <srcW>16.0</srcW>
                        <srcX>0.0</srcX>
                        <srcY>0.0</srcY>
                        <texture>saoui:textures/guiEDT.png</texture>
                        <w>16.0</w>
                        <x>0.0</x>
                        <y>0.0</y>
                        <z>0.0</z>
                    </element>
                    <element xsi:type="glRectangle">
                        <h>15.0</h>
                        <rgba>0xFFFFFFFF</rgba>
                        <srcH>15.0</srcH>
                        <srcW>5.0</srcW>
                        <srcX>16.0</srcX>
                        <srcY>0.0</srcY>
                        <texture>saoui:textures/guiEDT.png</texture>
                        <w>usernamewidth</w>
                        <x>16.0</x>
                        <y>0.0</y>
                        <z>0.0</z>
                    </element>
                    <element xsi:type="glString">
                        <text>username</text>
                        <shadow>true</shadow>
                        <rgba>0xFFFFFFFF</rgba>
                        <h>15.0</h>
                        <x>16.0</x>
                        <y>1.0</y>
                    </element>
                    <element xsi:type="glRectangle">
                        <h>15.0</h>
                        <rgba>0xFFFFFFFF</rgba>
                        <srcH>15.0</srcH>
                        <srcW>234.0</srcW>
                        <srcX>21.0</srcX>
                        <srcY>0.0</srcY>
                        <texture>saoui:textures/guiEDT.png</texture>
                        <w>234.0</w>
                        <x>16.0 + usernamewidth</x>
                        <y>0.0</y>
                        <z>0.0</z>
                    </element>
                    <element xsi:type="glRectangle">
                        <h>9.0</h>
                        <rgba>
                            healthStep == VERY_LOW? 0xBD0000FF:
                            healthStep == LOW? 0xF40000FF:
                            healthStep == VERY_DAMAGED? 0xF47800FF:
                            healthStep == DAMAGED? 0xF4BD00FF:
                            healthStep == OKAY? 0xEDEB38FF:
                            healthStep == GOOD? 0x93F43EFF:
                            healthStep == CREATIVE? 0xB32DE3FF:
                            0xFFFFFFFF
                        </rgba>
                        <srcH>9.0</srcH>
                        <srcW>215.0 * hpPct</srcW>
                        <srcX>0.0</srcX>
                        <srcY>188.0</srcY>
                        <texture>saoui:textures/guiEDT.png</texture>
                        <w>215.0 * hpPct</w>
                        <x>18.0 + usernamewidth</x>
                        <y>3.0</y>
                        <z>0.0</z>
                    </element>
                </calls>
            </value>
        </entry>
        <!--<entry>-->
        <!--<key>HOTBAR</key>-->
        <!--<value>-->
        <!--<x>0.0</x>-->
        <!--<y>0.0</y>-->
        <!--<z>0.0</z>-->
        <!--<calls>-->
        <!--<element xsi:type="glHotbarItem">-->

        <!--</element>-->
        <!---->
        <!--&lt;!&ndash;&lt;!&ndash;GLCore.glBlend(true);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;GLCore.tryBlendFuncSeparate(770, 771, 1, 0);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;GLCore.glBindTexture(OptionCore.SAO_UI.isEnabled() ? StringNames.gui : StringNames.guiCustom);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;GLCore.glColor(1, 1, 1, 1);&ndash;&gt;&ndash;&gt;-->

        <!--&lt;!&ndash;&lt;!&ndash;final InventoryPlayer inv = mc.thePlayer.inventory;&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;final int slotCount = 9;&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;final int slotsY = (res.getScaledHeight() - (slotCount * 22)) / 2;&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;final int y = (res.getScaledHeight() - (slotCount * 22)) / 2 + (22 * 10);&ndash;&gt;&ndash;&gt;-->

        <!--&lt;!&ndash;&lt;!&ndash;for (int i = 0; i < slotCount; i++) {&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;GLCore.glColorRGBA(i == inv.currentItem ? 0xFFBA66FF : 0xCDCDCDAA);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;GLCore.glTexturedRect(res.getScaledWidth() - 24, slotsY + (22 * i: zLevel, 0, 25, 20, 20);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;}&ndash;&gt;&ndash;&gt;-->

        <!--&lt;!&ndash;&lt;!&ndash;if (itemstack != null) {&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;if (enumhandside == EnumHandSide.LEFT) {&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;GLCore.glColorRGBA(0xFFBA66FF);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;GLCore.glTexturedRect(res.getScaledWidth() - 24, y, zLevel, 0, 25, 20, 20);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;} else {&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;GLCore.glColorRGBA(0xCDCDCDAA);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;super.renderHotbarItem(res.getScaledWidth() - 24, y, partialTicks, mc.thePlayer, itemstack);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;}&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;}&ndash;&gt;&ndash;&gt;-->

        <!--&lt;!&ndash;&lt;!&ndash;GLCore.glColor(1, 1, 1, 1);&ndash;&gt;&ndash;&gt;-->

        <!--&lt;!&ndash;&lt;!&ndash;GLCore.glBlend(false);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;GLCore.glRescaleNormal(true);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;RenderHelper.enableGUIStandardItemLighting();&ndash;&gt;&ndash;&gt;-->

        <!--&lt;!&ndash;&lt;!&ndash;for (int i = 0; i < slotCount; i++)&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;super.renderHotbarItem(res.getScaledWidth() - 22, slotsY + 2 + (22 * i: partialTicks, mc.thePlayer, mc.thePlayer.inventory.mainInventory[i]);&ndash;&gt;&ndash;&gt;-->

        <!--&lt;!&ndash;&lt;!&ndash;if (itemstack != null) {&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;super.renderHotbarItem(res.getScaledWidth() - 22, y + 2, partialTicks, mc.thePlayer, itemstack);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;}&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;GLCore.glRescaleNormal(false);&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;RenderHelper.disableStandardItemLighting();&ndash;&gt;&ndash;&gt;-->
        <!--</calls>-->
        <!--</value>-->
        <!--</entry>-->
    </parts>
</hud>
